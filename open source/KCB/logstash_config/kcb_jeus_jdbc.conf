input {
  file {
   path => "jeus_jdbc_*.log"
   type => jeus_jdbc
   start_position => ["end"]
   codec => plain {
   charset => "UTF-8"
    }
   }
}


filter {
grok {
  patterns_dir => "../patterns/kcb_jeus.grok"
  match => [ "message", "%{JEUS_JDBC}" ]
  keep_empty_captures => true
 }


if "_grokparsefailure" in [tags] {
 drop { }
 }

ruby {
            code => "event.set('TIME', event.get('@timestamp'))"
    }

mutate {
  convert => [ "MAX", "float" ]
  convert => [ "MIN", "float" ]
  convert => [ "ACTIVE", "float" ]
 }

ruby {
        code => "event.set('USED', event.get('ACTIVE') / event.get('MAX'));
		 event.set('USED', event.get('USED') * 100.00)"
 }

alter {
  add_field => { "SERVER_JDBC" => "%{SERVER}_%{JDBC}" }
}

}

output {
 stdout { codec => rubydebug codec => json {
   charset => "UTF-8"
    }
}
 elasticsearch {
  codec => json {
   charset => "UTF-8"
    }
  hosts => ":9200"
  index => "jeus-jdbc-%{+YYYY.MM.dd}"
  timeout => 300
  }
}

